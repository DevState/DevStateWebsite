var Isometry;(function(b){var c=(function(){function d(g,h,f,e,i){this._frontLeftTop=new Geometry.Point();this._frontLeftBottom=new Geometry.Point();this._backLeftTop=new Geometry.Point();this._backLeftBottom=new Geometry.Point();this._frontRightTop=new Geometry.Point();this._frontRightBottom=new Geometry.Point();this._backRightTop=new Geometry.Point();this._backRightBottom=new Geometry.Point();this._stageWidth=g;this._stageHeight=h;this._width=f;this._height=e;this._depth=i;this.updatePoints()}d.prototype.updateStage=function(e,f){this._stageWidth=e;this._stageHeight=f;this.updatePoints()};d.prototype.updateSpaceContainer=function(f,e,g){this._width=f;this._height=e;this._depth=g;this.updatePoints()};d.prototype.updatePoints=function(){console.error("AbstractIsometricSpace.updatePoints() ERROR : subclasses must override this method")};d.frontLeft=new Geometry.Point();d.backLeft=new Geometry.Point();d.frontRight=new Geometry.Point();d.backRight=new Geometry.Point();d.leftZ=new Geometry.Point();d.rightZ=new Geometry.Point();d.prototype.convert3Dto2D=function(f,e){console.log("AbstractIsometricSpace.convert3Dto2D() point3D:"+f+" , point : "+e);d.frontLeft.x=this._frontLeftBottom.x;d.frontLeft.y=MathUtil.interpolate(f.y,this._frontLeftBottom.y,this._frontLeftTop.y);console.log("\tfrontLeft:"+d.frontLeft);d.backLeft.x=this._backLeftBottom.x;d.backLeft.y=MathUtil.interpolate(f.y,this._backLeftBottom.y,this._backLeftTop.y);console.log("\tAbstractIsometricSpace.backLeft:"+d.backLeft);d.frontRight.x=this._frontRightBottom.x;d.frontRight.y=MathUtil.interpolate(f.y,this._frontRightBottom.y,this._frontRightTop.y);console.log("\tAbstractIsometricSpace.frontRight:"+d.frontRight);d.backRight.x=this._backRightBottom.x;d.backRight.y=MathUtil.interpolate(f.y,this._backRightBottom.y,this._backRightTop.y);console.log("\tAbstractIsometricSpace.backRight:"+d.backRight);d.leftZ.x=MathUtil.interpolate(f.z,d.frontLeft.x,d.backLeft.x);d.leftZ.y=MathUtil.interpolate(f.z,d.frontLeft.y,d.backLeft.y);console.log("\tAbstractIsometricSpace.leftZ:"+d.leftZ);d.rightZ.x=MathUtil.interpolate(f.z,d.frontRight.x,d.backRight.x);d.rightZ.y=MathUtil.interpolate(f.z,d.frontRight.y,d.backRight.y);console.log("\tAbstractIsometricSpace.rightZ:"+d.rightZ);e.x=MathUtil.interpolate(f.x,d.leftZ.x,d.rightZ.x);e.y=MathUtil.interpolate(f.x,d.leftZ.y,d.rightZ.y);console.log("\tpoint:"+e)};d.prototype.renderSpaceWireframeToContext=function(e){e.strokeStyle="#FF0000";e.lineWidth=1;e.beginPath();e.moveTo(this._frontLeftTop.x,this._frontLeftTop.y);e.lineTo(this._frontLeftBottom.x,this._frontLeftBottom.y);e.lineTo(this._backLeftBottom.x,this._backLeftBottom.y);e.lineTo(this._backLeftTop.x,this._backLeftTop.y);e.lineTo(this._frontLeftTop.x,this._frontLeftTop.y);e.stroke();e.closePath();e.fillRect(this._frontLeftBottom.x,this._frontLeftBottom.y,10,10);e.fillRect(this._backLeftBottom.x,this._backLeftBottom.y,10,10);e.strokeStyle="#0000FF";e.beginPath();e.moveTo(this._frontRightTop.x,this._frontRightTop.y);e.lineTo(this._frontRightBottom.x,this._frontRightBottom.y);e.lineTo(this._backRightBottom.x,this._backRightBottom.y);e.lineTo(this._backRightTop.x,this._backRightTop.y);e.lineTo(this._frontRightTop.x,this._frontRightTop.y);e.stroke();e.closePath();e.fillRect(this._frontRightBottom.x,this._frontRightBottom.y,10,10);e.fillRect(this._backRightBottom.x,this._backRightBottom.y,10,10)};return d})();b.AbstractIsometricSpace=c;var a=(function(e){__extends(d,e);function d(j,h,g,f,i){e.call(this,j,h,g,f,i)}d.prototype.updatePoints=function(){var h=MathUtil.map(this._depth,0,(this._width+this._depth),0,this._stageWidth);var f=-h/Math.cos(MathUtil.degreesToRadians(150));var g=MathUtil.map(1,0,this._depth,0,f);var i=g*this._height;var j=g*this._width;this._backLeftTop.x=h;this._backLeftTop.y=0;this._backLeftBottom.x=h;this._backLeftBottom.y=i;this._frontLeftTop.x=0;this._frontLeftTop.y=f*Math.sin(MathUtil.degreesToRadians(150));this._frontLeftBottom.x=0;this._frontLeftBottom.y=this._frontLeftTop.y+i;this._backRightTop.x=h+j*Math.cos(MathUtil.degreesToRadians(30));this._backRightTop.y=j*Math.sin(MathUtil.degreesToRadians(30));this._backRightBottom.x=this._backRightTop.x;this._backRightBottom.y=this._backRightTop.y+i;this._frontRightTop.x=j*Math.cos(MathUtil.degreesToRadians(30));this._frontRightTop.y=this._frontLeftTop.y+j*Math.sin(MathUtil.degreesToRadians(30));this._frontRightBottom.x=this._frontRightTop.x;this._frontRightBottom.y=this._frontRightTop.y+i};return d})(c);b.IsometricSpaceLeft=a})(Isometry||(Isometry={}));var IsometricUtil;(function(d){function c(f,e){e.x=f.x;e.y=f.y;e.z=f.z}d.copyPoint3DValues=c;function b(h,e,g,f){h.x=e;h.y=g;h.z=f}d.setPoint3DValues=b;function a(e,f){if((!e&&!f)||(e&&!f)||(!e&&f)){return false}return(e.x==f.x&&e.y==f.y&&e.z==f.z)}d.vector3DEquals=a})(IsometricUtil||(IsometricUtil={}));var Isometry;(function(a){var b=(function(){function c(e,f,d,g){if(typeof d==="undefined"){d=null}if(typeof g==="undefined"){g=null}this.lineWeight=1;this.lineColor="#000000";this.lineAlpha=1;this.fillAlpha=1;this.context=e;this.space=f;this.pointA=d?d:new Geometry.Point3D();this.pointB=g?g:new Geometry.Point3D()}c.renderPoint=new Geometry.Point();c.renderPoint3D=new Geometry.Point3D();c.prototype.setStyles=function(h,f,g,d,e){if(typeof f==="undefined"){f=1}if(typeof g==="undefined"){g="#000000"}if(typeof d==="undefined"){d=1}if(typeof e==="undefined"){e=1}this.fillColor=h;this.fillAlpha=f;this.lineColor=g;this.lineWeight=d;this.lineAlpha=e};c.prototype.render=function(){this.context.beginPath();console.log("IsometricPlane.render() pointA : "+this.pointA+" , pointB : "+this.pointB);this.prepareRender();IsometricUtil.copyPoint3DValues(this.pointA,c.renderPoint3D);this.space.convert3Dto2D(c.renderPoint3D,c.renderPoint);console.log("\tIsometricPlane.renderPoint : "+c.renderPoint);this.context.moveTo(c.renderPoint.x,c.renderPoint.y);c.renderPoint3D.x=this.pointB.x;c.renderPoint3D.z=this.pointB.z;this.space.convert3Dto2D(c.renderPoint3D,c.renderPoint);console.log("\tIsometricPlane.renderPoint : "+c.renderPoint);this.context.lineTo(c.renderPoint.x,c.renderPoint.y);IsometricUtil.copyPoint3DValues(this.pointB,c.renderPoint3D);this.space.convert3Dto2D(c.renderPoint3D,c.renderPoint);console.log("\tIsometricPlane.renderPoint : "+c.renderPoint);this.context.lineTo(c.renderPoint.x,c.renderPoint.y);c.renderPoint3D.x=this.pointA.x;c.renderPoint3D.z=this.pointA.z;this.space.convert3Dto2D(c.renderPoint3D,c.renderPoint);console.log("\tIsometricPlane.renderPoint : "+c.renderPoint);this.context.lineTo(c.renderPoint.x,c.renderPoint.y);IsometricUtil.copyPoint3DValues(this.pointA,c.renderPoint3D);this.space.convert3Dto2D(c.renderPoint3D,c.renderPoint);console.log("\tIsometricPlane.renderPoint : "+c.renderPoint);this.context.lineTo(c.renderPoint.x,c.renderPoint.y);this.context.fill();this.context.stroke();this.context.closePath()};c.prototype.prepareRender=function(){if(this.fillAlpha>0){this.context.fillStyle=this.fillColor}if(this.lineAlpha>0){this.context.strokeStyle=this.lineColor;this.context.lineWidth=this.lineWeight}};return c})();a.IsometricPlane=b})(Isometry||(Isometry={}));var Main=(function(){function a(d,c){console.log("Main constructor");this.canvas=c.createElement("canvas");c.body.appendChild(this.canvas);this.context=this.canvas.getContext("2d");this.canvas.width=d.innerWidth;this.canvas.height=d.innerHeight;this.space=new Isometry.IsometricSpaceLeft(500,400,400,300,400);var b=new Geometry.Point3D(0.1,0.1,0.1);var e=new Geometry.Point3D(0.1,0.8,0.8);this.plane=new Isometry.IsometricPlane(this.context,this.space,b,e);this.plane.setStyles("#CCCCAA",1,"FF0000",1,1);this.space.renderSpaceWireframeToContext(this.context);this.plane.render()}return a})();window.onload=function(){console.log("window.onload()");var a=new Main(window,document)};