!function(a){LineChart=function(a,b,c,d){SimpleGeometry.Rectangle.call(this,a,b,c,d),this.showDots=!0,this.renderPoint=new SimpleGeometry.Point,this.margin=30},LineChart.prototype=Object.create(SimpleGeometry.Rectangle.prototype),LineChart.prototype.constructor=SimpleGeometry.Rectangle,LineChart.prototype.setValues=function(a){this.min=0,this.max=100,this.values=a;for(var b=0,c=0;c<this.values.length;c++)for(var d=0;d<this.values[c].length;d++)this.values[c].length>b&&(b=this.values[c].length);for(c=0;c<this.values.length;c++)for(;this.values[c].length<b;)this.values[c].push(this.min)},LineChart.prototype.setRandomValues=function(){for(var a,b,c=[],d=2+Math.floor(2*Math.random()),e=10+Math.floor(10*Math.random());d>0;){a=[],b=30*c.length+Math.floor(30*Math.random());for(var f=0;e>f;f++)a[f]=b,b+=Math.floor(-3+6*Math.random()),b=Math.max(b,0);c.push(a),d--}this.setValues(c)},LineChart.prototype.setLineColors=function(a){this.colors=a},LineChart.prototype.setRandomColors=function(){for(this.colors=[];this.colors.length!=this.values.length;)this.colors.push(SimpleGeometry.getRandomFillStyleColor(1,123))},LineChart.prototype.render=function(a,b){this.values||this.setRandomValues(),this.colors||this.setRandomColors(),isNaN(b)&&(b=1),this.pointSpacer=(this.width-2*this.margin)/(this.values[0].length-1);for(var c=0;c<this.values.length;c++)this.renderLine(a,this.values[c],this.colors[c],b)},LineChart.prototype.calculateYPosition=function(a,b){return SimpleGeometry.interpolate(SimpleGeometry.normalize(a,this.min,this.max)*b,this.getBottom(),this.y)},LineChart.prototype.renderLine=function(a,b,c,d){if(0!=d){a.beginPath(),a.strokeStyle=c,a.lineWidth=3,a.moveTo(this.x+this.margin,this.calculateYPosition(b[0],d));for(var e=1;e<b.length;e++)this.renderPoint.x=this.x+this.margin+this.pointSpacer*e,this.renderPoint.y=this.calculateYPosition(b[e],d),a.lineTo(this.renderPoint.x,this.renderPoint.y);if(a.stroke(),a.closePath(),1==d&&this.showDots)for(a.strokeStyle=c,a.fillStyle="#FFFFFF",e=0;e<b.length;e++)a.beginPath(),this.renderPoint.x=this.x+this.margin+this.pointSpacer*e,this.renderPoint.y=this.calculateYPosition(b[e],d),a.arc(this.renderPoint.x,this.renderPoint.y,5,0,SimpleGeometry.PI2),a.fill(),a.stroke(),a.closePath()}},a.LineChart=LineChart}(window);