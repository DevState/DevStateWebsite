!function(a){var b=function(a,b,c,d,e){this.frontLeftTop=new SimpleGeometry.Point,this.frontLeftBottom=new SimpleGeometry.Point,this.backLeftTop=new SimpleGeometry.Point,this.backLeftBottom=new SimpleGeometry.Point,this.frontRightTop=new SimpleGeometry.Point,this.frontRightBottom=new SimpleGeometry.Point,this.backRightTop=new SimpleGeometry.Point,this.backRightBottom=new SimpleGeometry.Point,this.stageWidth=a,this.stageHeight=b,this.width=c,this.height=d,this.depth=e,this.updatePoints()};b.prototype.updateStage=function(a,b){this.stageWidth=a,this.stageHeight=b,this.updatePoints()},b.prototype.updateSpaceContainer=function(a,b,c){this.width=a,this.height=b,this.depth=c,this.updatePoints()},b.prototype.updatePoints=function(){console.error("AbstractIsometricSpace.updatePoints() ERROR : subclasses must override this method")},b.prototype.frontLeft=new SimpleGeometry.Point,b.prototype.backLeft=new SimpleGeometry.Point,b.prototype.frontRight=new SimpleGeometry.Point,b.prototype.backRight=new SimpleGeometry.Point,b.prototype.leftZ=new SimpleGeometry.Point,b.prototype.rightZ=new SimpleGeometry.Point,b.prototype.project=function(a,b){this.frontLeft.x=this.frontLeftBottom.x,this.frontLeft.y=SimpleGeometry.interpolate(a.y,this.frontLeftBottom.y,this.frontLeftTop.y),this.backLeft.x=this.backLeftBottom.x,this.backLeft.y=SimpleGeometry.interpolate(a.y,this.backLeftBottom.y,this.backLeftTop.y),this.frontRight.x=this.frontRightBottom.x,this.frontRight.y=SimpleGeometry.interpolate(a.y,this.frontRightBottom.y,this.frontRightTop.y),this.backRight.x=this.backRightBottom.x,this.backRight.y=SimpleGeometry.interpolate(a.y,this.backRightBottom.y,this.backRightTop.y),this.leftZ.x=SimpleGeometry.interpolate(a.z,this.frontLeft.x,this.backLeft.x),this.leftZ.y=SimpleGeometry.interpolate(a.z,this.frontLeft.y,this.backLeft.y),this.rightZ.x=SimpleGeometry.interpolate(a.z,this.frontRight.x,this.backRight.x),this.rightZ.y=SimpleGeometry.interpolate(a.z,this.frontRight.y,this.backRight.y),b.x=SimpleGeometry.interpolate(a.x,this.leftZ.x,this.rightZ.x),b.y=SimpleGeometry.interpolate(a.x,this.leftZ.y,this.rightZ.y)},b.prototype.renderWireframe=function(a,b){a.strokeStyle=void 0==b?SimpleGeometry.getRgbaStyleString(255,0,0,.3):b,a.lineWidth=1,a.beginPath(),a.moveTo(this.frontLeftTop.x,this.frontLeftTop.y),a.lineTo(this.frontLeftBottom.x,this.frontLeftBottom.y),a.lineTo(this.backLeftBottom.x,this.backLeftBottom.y),a.lineTo(this.backLeftTop.x,this.backLeftTop.y),a.lineTo(this.frontLeftTop.x,this.frontLeftTop.y),a.closePath(),a.stroke(),a.beginPath(),a.moveTo(this.frontRightTop.x,this.frontRightTop.y),a.lineTo(this.frontRightBottom.x,this.frontRightBottom.y),a.lineTo(this.backRightBottom.x,this.backRightBottom.y),a.lineTo(this.backRightTop.x,this.backRightTop.y),a.lineTo(this.frontRightTop.x,this.frontRightTop.y),a.stroke(),a.closePath(),a.moveTo(this.backLeftTop.x,this.backLeftTop.y),a.lineTo(this.backRightTop.x,this.backRightTop.y),a.stroke(),a.moveTo(this.backLeftBottom.x,this.backLeftBottom.y),a.lineTo(this.backRightBottom.x,this.backRightBottom.y),a.stroke(),a.moveTo(this.frontLeftTop.x,this.frontLeftTop.y),a.lineTo(this.frontRightTop.x,this.frontRightTop.y),a.stroke(),a.moveTo(this.frontLeftBottom.x,this.frontLeftBottom.y),a.lineTo(this.frontRightBottom.x,this.frontRightBottom.y),a.stroke()},a.AbstractIsometricSpace=b;var c=function(a,c,d,e,f){b.call(this,a,c,d,e,f)};c.prototype=Object.create(b.prototype),c.prototype.constructor=b,c.prototype.updatePoints=function(){var a=SimpleGeometry.map(this.depth,0,this.width+this.depth,0,this.stageWidth),b=-a/Math.cos(SimpleGeometry.degreesToRadians(150)),c=SimpleGeometry.map(1,0,this.depth,0,b),d=c*this.height,e=c*this.width;this.backLeftTop.x=a,this.backLeftTop.y=0,this.backLeftBottom.x=a,this.backLeftBottom.y=d,this.frontLeftTop.x=0,this.frontLeftTop.y=b*Math.sin(SimpleGeometry.degreesToRadians(150)),this.frontLeftBottom.x=0,this.frontLeftBottom.y=this.frontLeftTop.y+d,this.backRightTop.x=a+e*Math.cos(SimpleGeometry.degreesToRadians(30)),this.backRightTop.y=e*Math.sin(SimpleGeometry.degreesToRadians(30)),this.backRightBottom.x=this.backRightTop.x,this.backRightBottom.y=this.backRightTop.y+d,this.frontRightTop.x=e*Math.cos(SimpleGeometry.degreesToRadians(30)),this.frontRightTop.y=this.frontLeftTop.y+e*Math.sin(SimpleGeometry.degreesToRadians(30)),this.frontRightBottom.x=this.frontRightTop.x,this.frontRightBottom.y=this.frontRightTop.y+d},a.IsometricSpaceLeft=c;var d=function(a,b,c,d,e,f){"undefined"==typeof c&&(c=null),"undefined"==typeof d&&(d=null),this.lineWeight=1,this.lineColor="#000000",this.lineAlpha=1,this.fillAlpha=1,this.context=a,this.space=b,this.pointA=c?c:new SimpleGeometry.Point3d,this.pointB=d?d:new SimpleGeometry.Point3d,this.pointC=e?e:new SimpleGeometry.Point3d,this.pointD=f?f:new SimpleGeometry.Point3d,this.points=[this.pointA,this.pointB,this.pointC,this.pointD]};d.prototype.setStyles=function(a,b,c,d,e){"undefined"==typeof b&&(b=1),"undefined"==typeof c&&(c="#000000"),"undefined"==typeof d&&(d=1),"undefined"==typeof e&&(e=1),this.fillColor=a,this.fillAlpha=b,this.lineColor=c,this.lineWeight=d,this.lineAlpha=e},d.renderPoint=new SimpleGeometry.Point,d.prototype.render=function(){this.prepareRender(),this.context.beginPath();for(var a=0;4>a;a++)this.space.project(this.points[a],d.renderPoint),0==a?this.context.moveTo(d.renderPoint.x,d.renderPoint.y):this.context.lineTo(d.renderPoint.x,d.renderPoint.y);this.context.closePath(),this.context.fill(),this.context.stroke()},d.prototype.prepareRender=function(){this.fillAlpha>0&&(this.context.fillStyle=this.fillColor),this.lineAlpha>0&&(this.context.strokeStyle=this.lineColor,this.context.lineWidth=this.lineWeight)},a.IsometricPlane=d;var e=function(a,b,c,e,f,g,h,i){this.context=a,this.space=b,this.x=c,this.y=e,this.z=f,this.width=g,this.height=h,this.depth=i,this.planeLeft=new d(a,b),this.planeRight=new d(a,b),this.planeTop=new d(a,b),this.updatePlanes()};e.prototype.updatePlanes=function(){this.planeLeft.pointA.updateValues(this.x,this.y,this.z),this.planeLeft.pointB.updateValues(this.x+this.width,this.y,this.z),this.planeLeft.pointC.updateValues(this.x+this.width,this.y+this.height,this.z),this.planeLeft.pointD.updateValues(this.x,this.y+this.height,this.z),this.planeRight.pointA.updateValues(this.x+this.width,this.y,this.z),this.planeRight.pointB.updateValues(this.x+this.width,this.y,this.z+this.depth),this.planeRight.pointC.updateValues(this.x+this.width,this.y+this.height,this.z+this.depth),this.planeRight.pointD.updateValues(this.x+this.width,this.y+this.height,this.z),this.planeTop.pointA.updateValues(this.x,this.y+this.height,this.z),this.planeTop.pointB.updateValues(this.x,this.y+this.height,this.z+this.depth),this.planeTop.pointC.updateValues(this.x+this.width,this.y+this.height,this.z+this.depth),this.planeTop.pointD.updateValues(this.x+this.width,this.y+this.height,this.z)},e.prototype.setLeftPlaneStyle=function(a,b,c,d,e){this.planeLeft.setStyles(a,b,c,d,e)},e.prototype.setRightPlaneStyle=function(a,b,c,d,e){this.planeRight.setStyles(a,b,c,d,e)},e.prototype.setTopPlaneStyle=function(a,b,c,d,e){this.planeTop.setStyles(a,b,c,d,e)},e.prototype.setHeight=function(a){this.height=a,this.updatePlanes()},e.prototype.render=function(){this.planeLeft.render(),this.planeRight.render(),this.planeTop.render()},a.IsometricSquare=e}(window);