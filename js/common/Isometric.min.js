(function(c){var e=function(h,i,g,f,j){this.frontLeftTop=new SimpleGeometry.Point();this.frontLeftBottom=new SimpleGeometry.Point();this.backLeftTop=new SimpleGeometry.Point();this.backLeftBottom=new SimpleGeometry.Point();this.frontRightTop=new SimpleGeometry.Point();this.frontRightBottom=new SimpleGeometry.Point();this.backRightTop=new SimpleGeometry.Point();this.backRightBottom=new SimpleGeometry.Point();this.stageWidth=h;this.stageHeight=i;this.width=g;this.height=f;this.depth=j;this.updatePoints()};e.prototype.updateStage=function(f,g){this.stageWidth=f;this.stageHeight=g;this.updatePoints()};e.prototype.updateSpaceContainer=function(g,f,h){this.width=g;this.height=f;this.depth=h;this.updatePoints()};e.prototype.updatePoints=function(){console.error("AbstractIsometricSpace.updatePoints() ERROR : subclasses must override this method")};e.prototype.frontLeft=new SimpleGeometry.Point();e.prototype.backLeft=new SimpleGeometry.Point();e.prototype.frontRight=new SimpleGeometry.Point();e.prototype.backRight=new SimpleGeometry.Point();e.prototype.leftZ=new SimpleGeometry.Point();e.prototype.rightZ=new SimpleGeometry.Point();e.prototype.project=function(g,f){this.frontLeft.x=this.frontLeftBottom.x;this.frontLeft.y=SimpleGeometry.interpolate(g.y,this.frontLeftBottom.y,this.frontLeftTop.y);this.backLeft.x=this.backLeftBottom.x;this.backLeft.y=SimpleGeometry.interpolate(g.y,this.backLeftBottom.y,this.backLeftTop.y);this.frontRight.x=this.frontRightBottom.x;this.frontRight.y=SimpleGeometry.interpolate(g.y,this.frontRightBottom.y,this.frontRightTop.y);this.backRight.x=this.backRightBottom.x;this.backRight.y=SimpleGeometry.interpolate(g.y,this.backRightBottom.y,this.backRightTop.y);this.leftZ.x=SimpleGeometry.interpolate(g.z,this.frontLeft.x,this.backLeft.x);this.leftZ.y=SimpleGeometry.interpolate(g.z,this.frontLeft.y,this.backLeft.y);this.rightZ.x=SimpleGeometry.interpolate(g.z,this.frontRight.x,this.backRight.x);this.rightZ.y=SimpleGeometry.interpolate(g.z,this.frontRight.y,this.backRight.y);f.x=SimpleGeometry.interpolate(g.x,this.leftZ.x,this.rightZ.x);f.y=SimpleGeometry.interpolate(g.x,this.leftZ.y,this.rightZ.y)};e.prototype.renderWireframe=function(f,g){f.strokeStyle=g==undefined?SimpleGeometry.getRgbaStyleString(255,0,0,0.3):g;f.lineWidth=1;f.beginPath();f.moveTo(this.frontLeftTop.x,this.frontLeftTop.y);f.lineTo(this.frontLeftBottom.x,this.frontLeftBottom.y);f.lineTo(this.backLeftBottom.x,this.backLeftBottom.y);f.lineTo(this.backLeftTop.x,this.backLeftTop.y);f.lineTo(this.frontLeftTop.x,this.frontLeftTop.y);f.closePath();f.stroke();f.beginPath();f.moveTo(this.frontRightTop.x,this.frontRightTop.y);f.lineTo(this.frontRightBottom.x,this.frontRightBottom.y);f.lineTo(this.backRightBottom.x,this.backRightBottom.y);f.lineTo(this.backRightTop.x,this.backRightTop.y);f.lineTo(this.frontRightTop.x,this.frontRightTop.y);f.stroke();f.closePath();f.moveTo(this.backLeftTop.x,this.backLeftTop.y);f.lineTo(this.backRightTop.x,this.backRightTop.y);f.stroke();f.moveTo(this.backLeftBottom.x,this.backLeftBottom.y);f.lineTo(this.backRightBottom.x,this.backRightBottom.y);f.stroke();f.moveTo(this.frontLeftTop.x,this.frontLeftTop.y);f.lineTo(this.frontRightTop.x,this.frontRightTop.y);f.stroke();f.moveTo(this.frontLeftBottom.x,this.frontLeftBottom.y);f.lineTo(this.frontRightBottom.x,this.frontRightBottom.y);f.stroke()};c.AbstractIsometricSpace=e;var b=function(h,i,g,f,j){e.call(this,h,i,g,f,j)};b.prototype=Object.create(e.prototype);b.prototype.constructor=e;b.prototype.updatePoints=function(){var h=SimpleGeometry.map(this.depth,0,(this.width+this.depth),0,this.stageWidth);var f=-h/Math.cos(SimpleGeometry.degreesToRadians(150));var g=SimpleGeometry.map(1,0,this.depth,0,f);var i=g*this.height;var j=g*this.width;this.backLeftTop.x=h;this.backLeftTop.y=0;this.backLeftBottom.x=h;this.backLeftBottom.y=i;this.frontLeftTop.x=0;this.frontLeftTop.y=f*Math.sin(SimpleGeometry.degreesToRadians(150));this.frontLeftBottom.x=0;this.frontLeftBottom.y=this.frontLeftTop.y+i;this.backRightTop.x=h+j*Math.cos(SimpleGeometry.degreesToRadians(30));this.backRightTop.y=j*Math.sin(SimpleGeometry.degreesToRadians(30));this.backRightBottom.x=this.backRightTop.x;this.backRightBottom.y=this.backRightTop.y+i;this.frontRightTop.x=j*Math.cos(SimpleGeometry.degreesToRadians(30));this.frontRightTop.y=this.frontLeftTop.y+j*Math.sin(SimpleGeometry.degreesToRadians(30));this.frontRightBottom.x=this.frontRightTop.x;this.frontRightBottom.y=this.frontRightTop.y+i};c.IsometricSpaceLeft=b;var d=function(g,h,f,k,j,i){if(typeof f==="undefined"){f=null}if(typeof k==="undefined"){k=null}this.lineWeight=1;this.lineColor="#000000";this.lineAlpha=1;this.fillAlpha=1;this.context=g;this.space=h;this.pointA=f?f:new SimpleGeometry.Point3d();this.pointB=k?k:new SimpleGeometry.Point3d();this.pointC=j?j:new SimpleGeometry.Point3d();this.pointD=i?i:new SimpleGeometry.Point3d();this.points=[this.pointA,this.pointB,this.pointC,this.pointD]};d.prototype.setStyles=function(j,h,i,f,g){if(typeof h==="undefined"){h=1}if(typeof i==="undefined"){i="#000000"}if(typeof f==="undefined"){f=1}if(typeof g==="undefined"){g=1}this.fillColor=j;this.fillAlpha=h;this.lineColor=i;this.lineWeight=f;this.lineAlpha=g};d.renderPoint=new SimpleGeometry.Point();d.prototype.render=function(){this.prepareRender();this.context.beginPath();for(var f=0;f<4;f++){this.space.project(this.points[f],d.renderPoint);if(f==0){this.context.moveTo(d.renderPoint.x,d.renderPoint.y)}else{this.context.lineTo(d.renderPoint.x,d.renderPoint.y)}}this.context.closePath();this.context.fill();this.context.stroke()};d.prototype.prepareRender=function(){if(this.fillAlpha>0){this.context.fillStyle=this.fillColor}if(this.lineAlpha>0){this.context.strokeStyle=this.lineColor;this.context.lineWidth=this.lineWeight}};c.IsometricPlane=d;var a=function(h,j,g,m,l,i,f,k){this.context=h;this.space=j;this.x=g;this.y=m;this.z=l;this.width=i;this.height=f;this.depth=k;this.planeLeft=new d(h,j);this.planeRight=new d(h,j);this.planeTop=new d(h,j);this.updatePlanes()};a.prototype.updatePlanes=function(){this.planeLeft.pointA.updateValues(this.x,this.y,this.z);this.planeLeft.pointB.updateValues(this.x+this.width,this.y,this.z);this.planeLeft.pointC.updateValues(this.x+this.width,this.y+this.height,this.z);this.planeLeft.pointD.updateValues(this.x,this.y+this.height,this.z);this.planeRight.pointA.updateValues(this.x+this.width,this.y,this.z);this.planeRight.pointB.updateValues(this.x+this.width,this.y,this.z+this.depth);this.planeRight.pointC.updateValues(this.x+this.width,this.y+this.height,this.z+this.depth);this.planeRight.pointD.updateValues(this.x+this.width,this.y+this.height,this.z);this.planeTop.pointA.updateValues(this.x,this.y+this.height,this.z);this.planeTop.pointB.updateValues(this.x,this.y+this.height,this.z+this.depth);this.planeTop.pointC.updateValues(this.x+this.width,this.y+this.height,this.z+this.depth);this.planeTop.pointD.updateValues(this.x+this.width,this.y+this.height,this.z)};a.prototype.setLeftPlaneStyle=function(j,h,i,f,g){this.planeLeft.setStyles(j,h,i,f,g)};a.prototype.setRightPlaneStyle=function(j,h,i,f,g){this.planeRight.setStyles(j,h,i,f,g)};a.prototype.setTopPlaneStyle=function(j,h,i,f,g){this.planeTop.setStyles(j,h,i,f,g)};a.prototype.setHeight=function(f){this.height=f;this.updatePlanes()};a.prototype.render=function(){this.planeLeft.render();this.planeRight.render();this.planeTop.render()};c.IsometricSquare=a}(window));