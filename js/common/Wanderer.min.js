!function(a){Wanderer=function(a){this.circle=a,this.minVelocity=.01,this.maxVelocity=.06,this.minDuration=500,this.maxDuration=2e3,this.duration=1e3,this.currentDuration=0,this.velocity=.04,this.frameRate=20,this.radius=0,this.targetVelocity=0,this.targetRadius=0,this.radian=0,this.intervalId=-1,this.radiusIncrement=0,this.velocityIncrement=0,this.opposingPoint=new SimpleGeometry.Point,SimpleGeometry.Point.call(this,0,0)},Wanderer.prototype=Object.create(SimpleGeometry.Point.prototype),Wanderer.prototype.constructor=SimpleGeometry.Point,Wanderer.prototype.start=function(a){this.updateCallBack=a,this.radian=isNaN(this.startRadian)?Math.random()*SimpleGeometry.PI2:this.startRadian,this.radius=Math.random()*this.circle.radius,this.setNextTarget()},Wanderer.prototype.pause=function(){clearInterval(this.intervalId)},Wanderer.prototype.setNextTarget=function(){isNaN(this.intervalId)||clearInterval(this.intervalId),this.currentDuration=0,this.targetRadius=Math.random()*this.circle.radius,this.targetVelocity=(this.minVelocity+Math.random()*(this.maxVelocity-this.minVelocity))*SimpleGeometry.getRandomPositiveOrNegativeOne(),this.duration=this.minDuration+Math.random()*(this.maxDuration-this.minDuration),this.radiusIncrement=(this.targetRadius-this.radius)/(this.duration/this.frameRate),this.velocityIncrement=(this.targetVelocity-this.velocity)/(this.duration/this.frameRate);var a=this;this.intervalId=setInterval(function(){a.update()},this.frameRate)},Wanderer.prototype.update=function(){this.velocity+=this.velocityIncrement,this.radian=SimpleGeometry.constrainRadianTo2PI(this.radian+this.velocity),this.radius+=this.radiusIncrement,this.currentDuration+=this.frameRate,this.x=this.circle.x+Math.cos(this.radian)*this.radius,this.y=this.circle.y+Math.sin(this.radian)*this.radius,this.currentDuration>=this.duration&&this.setNextTarget(),this.dispatchUpdate()},Wanderer.prototype.dispatchUpdate=function(){this.updateCallBack&&this.updateCallBack()},Wanderer.prototype.getOpposingPoint=function(){var a=SimpleGeometry.constrainRadianTo2PI(this.radian+Math.PI);return this.opposingPoint.x=this.circle.x+Math.cos(a)*this.radius,this.opposingPoint.y=this.circle.y+Math.sin(a)*this.radius,this.opposingPoint},a.Wanderer=Wanderer}(window);